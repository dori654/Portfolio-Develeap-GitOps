apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    chart: elasticsearch
    repoURL: https://helm.elastic.co
    targetRevision: 8.5.1
    helm:
      releaseName: elasticsearch
      values: |
        clusterName: "cat-agency-logs"
        nodeGroup: "master"
        
        # Use smaller resources for development
        replicas: 1
        minimumMasterNodes: 1
        
        # Resource limits
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        
        # Volume claim template
        volumeClaimTemplate:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: "gp2"
          resources:
            requests:
              storage: 10Gi
        
        # Security configuration
        esConfig:
          elasticsearch.yml: |
            xpack.security.enabled: true
            xpack.security.transport.ssl.enabled: true
            xpack.security.transport.ssl.verification_mode: certificate
            xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
            xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
            xpack.security.http.ssl.enabled: true
            xpack.security.http.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
            xpack.security.http.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
        
        # Use ClusterIP service (single load balancer approach)
        service:
          type: ClusterIP
          
        # Environment variables for authentication
        extraEnvs:
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-credentials
                key: password
          - name: ELASTIC_USERNAME
            valueFrom:
              secretKeyRef:
                name: elasticsearch-credentials
                key: username
        
        # Security context
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        
        # Create certificates secret
        secretMounts:
          - name: elastic-certificates
            secretName: elastic-certificates
            path: /usr/share/elasticsearch/config/certs
        
        # Health checks
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 60
        
        # Anti-affinity for production (optional for dev)
        antiAffinity: "soft"
        
  destination:
    server: https://kubernetes.default.svc
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
