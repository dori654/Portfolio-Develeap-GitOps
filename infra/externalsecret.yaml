apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: elasticsearch-credentials
  namespace: logging
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: elasticsearch-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        username: "{{ .username | toString }}"
        password: "{{ .password | toString }}"
  data:
  - secretKey: username
    remoteRef:
      key: cat-agency-logging-credentials
      property: username
  - secretKey: password
    remoteRef:
      key: cat-agency-logging-credentials
      property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: elastic-certificates
  namespace: logging
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: elastic-certificates
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        elastic-certificates.p12: "{{ .certificate | b64decode }}"
  data:
  - secretKey: certificate
    remoteRef:
      key: cat-agency-elastic-certificates
      property: p12_certificate
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kibana-certificates
  namespace: logging
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: kibana-certificates
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ .certificate | toString }}"
        tls.key: "{{ .private_key | toString }}"
  data:
  - secretKey: certificate
    remoteRef:
      key: cat-agency-kibana-certificates
      property: certificate
  - secretKey: private_key
    remoteRef:
      key: cat-agency-kibana-certificates
      property: private_key
